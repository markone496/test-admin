<?php

namespace lz\admin\Controllers;


use lz\admin\Models\UserModel;
use lz\admin\Services\UserService;
use Illuminate\Http\Request;


class SysUserController extends BaseModelController
{

    /**
     * 路由
     * @var string
     */
    public $route = '/sys/user/';

    /**
     * 模型
     * @return \lz\admin\Models\BaseModel|array|\Illuminate\Database\Eloquent\Builder
     */
    public function getModel()
    {
        return [
            'title' => '系统用户',
            'choose_type' => '',
            'table_config' => [
                ['table' => 'sys_user', 'primary_key' => 'id', 'join' => '', 'field_1' => '', 'field_2' => '', 'synch_io' => ''],
                ['table' => 'sys_role', 'primary_key' => '', 'join' => 'left', 'field_1' => 'id', 'field_2' => 'sys_user.role_id', 'synch_io' => '']
            ],
            'cols_config' => [
                ['table' => 'sys_user', 'field' => 'id', 'alias' => '', 'title' => 'ID', 'width' => '80', 'fixed' => '', 'align' => 'center', 'sort' => '1', 'option' => '', 'show_type' => ''],
                ['table' => 'sys_user', 'field' => 'account', 'alias' => '', 'title' => '账号', 'width' => '120', 'fixed' => '', 'align' => 'center', 'sort' => '', 'option' => '', 'show_type' => ''],
                ['table' => 'sys_user', 'field' => 'nickname', 'alias' => '', 'title' => '昵称', 'width' => '120', 'fixed' => '', 'align' => 'center', 'sort' => '', 'option' => '', 'show_type' => ''],
                ['table' => 'sys_role', 'field' => 'role_name', 'alias' => '', 'title' => '角色名称', 'width' => '120', 'fixed' => '', 'align' => 'center', 'sort' => '', 'option' => '', 'show_type' => ''],
                ['table' => 'sys_user', 'field' => 'is_disable', 'alias' => '', 'title' => '是否禁用', 'width' => '120', 'fixed' => '', 'align' => 'center', 'sort' => '', 'option' => 1, 'show_type' => ''],
                ['table' => 'sys_user', 'field' => 'created_at', 'alias' => '', 'title' => '创建时间', 'width' => '170', 'fixed' => '', 'align' => 'center', 'sort' => '', 'option' => '', 'show_type' => ''],
            ],
            'toolbar_config' => [
                ['title' => '新增', 'event' => 'create', 'color' => '', 'function_id' => 8]
            ],
            'tool_config' => [
                ['bind' => '', 'title' => '重置密码', 'event' => 'resetPassword', 'color' => 'layui-bg-blue', 'function_id' => 11],
                ['bind' => '', 'title' => '编辑', 'event' => 'update', 'color' => '', 'function_id' => 9],
                ['bind' => '', 'title' => '删除', 'event' => 'delete', 'color' => 'layui-bg-red', 'function_id' => 10]
            ],
            'search_config' => [
                ['table' => 'sys_user', 'field' => 'role_name', 'title' => '角色名称', 'category' => 'input', 'option' => '', 'type' => '', 'range' => '', 'show_const' => '1']
            ],
            'form_config' => [
                ['table' => 'sys_user', 'field' => 'nickname', 'title' => '昵称', 'category' => 'input', 'required' => '1', 'value' => '', 'option' => '', 'type' => 'text', 'ban_edit' => '2'],
                ['table' => 'sys_user', 'field' => 'account', 'title' => '账号', 'category' => 'input', 'required' => '1', 'value' => '', 'option' => '', 'type' => 'text', 'ban_edit' => '2'],
                ['table' => 'sys_user', 'field' => 'password_md5', 'title' => '密码', 'category' => 'input', 'required' => '1', 'value' => '888888', 'option' => '', 'type' => 'text', 'ban_edit' => '1'],
                ['table' => 'sys_user', 'field' => 'role_id', 'title' => '角色', 'category' => 'select', 'required' => '1', 'value' => '', 'option' => '2', 'type' => 'text', 'ban_edit' => ''],
                ['table' => 'sys_user', 'field' => 'is_disable', 'title' => '是否禁用', 'category' => 'radio', 'required' => '1', 'value' => 0, 'option' => '1', 'type' => 'text', 'ban_edit' => ''],
            ]
        ];
    }

    public function indexView()
    {
        return view('/lzadmin/user/index', $this->compact());
    }


    public function saveBeforeVerify($table, $field, $value)
    {
        switch ($field) {
            case 'account':
                return customVerifyAccount($value);
            case "password_md5":
                return customVerifyPassword($value);
            default:
                return false;
        }
    }

    public function saveBeforeValueFormat($table, $field, $value)
    {
        switch ($field) {
            case "password_md5":
                return UserService::passwordEncryption($value);
            default:
                return $value;
        }

    }

    /**
     * 新增后更新缓存
     * @param Request $request
     * @return array
     * @throws \Exception
     */
    public function create(Request $request)
    {
        $result = parent::create($request); // TODO: Change the autogenerated stub
        if ($result['code'] == 0) {
            UserService::refreshCache($result['data']);
        }
        return $result;
    }

    /**
     * 修改后更新缓存
     * @param Request $request
     * @return array
     * @throws \Exception
     */
    public function update(Request $request)
    {
        $primary_key = $request->input('primary_key');
        $result = parent::update($request); // TODO: Change the autogenerated stub
        if ($result['code'] == 0) {
            UserService::refreshCache($primary_key);
        }
        return $result;
    }

    /**
     * 删除
     * @param Request $request
     * @return array
     */
    public function delete(Request $request)
    {
        $ids = $request->input('primary_key');
        $result = UserModel::query()->where('id', $ids)->delete();
        if (!$result) {
            return $this->error();
        }
        UserService::deleteCache($ids);
        return $this->success();
    }

    /**
     * 重置密码
     * @param Request $request
     * @return array
     */
    public function password(Request $request)
    {
        $id = $request->input('id');
        $password = $request->input('password');
        if ($verify_msg = customVerifyPassword($password)) {
            return $this->error($verify_msg);
        }
        $model = UserModel::find($id);
        if (empty($model)) {
            return $this->error('数据已删除');
        }
        $model->password_md5 = UserService::passwordEncryption($password);
        $result = $model->update();
        return $this->result($result);
    }

}
